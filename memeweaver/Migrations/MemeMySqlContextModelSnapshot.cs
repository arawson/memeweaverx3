// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using memeweaver;

namespace memeweaver.Migrations
{
    [DbContext(typeof(MemeMySqlContext))]
    partial class MemeMySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("PlayableServerSetting", b =>
                {
                    b.Property<long>("PlayablesPlayableId")
                        .HasColumnType("bigint");

                    b.Property<long>("ServerSettingsServerSettingId")
                        .HasColumnType("bigint");

                    b.HasKey("PlayablesPlayableId", "ServerSettingsServerSettingId");

                    b.HasIndex("ServerSettingsServerSettingId");

                    b.ToTable("PlayableServerSetting");
                });

            modelBuilder.Entity("memeweaver.Playable", b =>
                {
                    b.Property<long>("PlayableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<int>("PlayCount")
                        .HasColumnType("int");

                    b.Property<string>("StoragePath")
                        .HasColumnType("text");

                    b.HasKey("PlayableId");

                    b.HasIndex("Location")
                        .IsUnique();

                    b.ToTable("Playables");
                });

            modelBuilder.Entity("memeweaver.ServerSetting", b =>
                {
                    b.Property<long>("ServerSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("DECIMAL(20)");

                    b.HasKey("ServerSettingId");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("ServerSettings");
                });

            modelBuilder.Entity("PlayableServerSetting", b =>
                {
                    b.HasOne("memeweaver.Playable", null)
                        .WithMany()
                        .HasForeignKey("PlayablesPlayableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("memeweaver.ServerSetting", null)
                        .WithMany()
                        .HasForeignKey("ServerSettingsServerSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
